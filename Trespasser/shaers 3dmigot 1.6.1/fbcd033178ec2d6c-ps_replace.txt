// ---- Created with 3Dmigoto v1.3.16 on Thu Nov 16 22:42:45 2023
struct t3_t {
  float val[4];
};
StructuredBuffer<t3_t> t3 : register(t3);

struct t2_t {
  float val[4];
};
StructuredBuffer<t2_t> t2 : register(t2);

Texture2DArray<uint4> t1 : register(t1);

Texture2DArray<uint4> t0 : register(t0);

cbuffer cb0 : register(b0)
{
  float4 cb0[12];
}




// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);


void main(
  float4 v0 : SV_POSITION0,
  float2 v1 : TEXCOORD0,
  out float4 o0 : SV_TARGET0)
{
  float4 r0,r1,r2,r3;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.xy = min(cb0[6].zw, v1.xy);
  r1.xy = frac(r0.xy);
  r0.xy = (int2)r0.xy;
  r0.zw = cb0[6].yx;
  r2.x = t0.Load(r0.xyzw).x;
  r2.y = t0.Load(r0.xyzw, int3(1, 0, 0)).x;
  r2.z = t0.Load(r0.xyzw, int3(0, 1, 0)).x;
  r2.w = t0.Load(r0.xyzw, int3(1, 1, 0)).x;
  r3.x = t1.Load(r0.xyzw).x;
  r3.y = t1.Load(r0.xyzw, int3(1, 0, 0)).x;
  r3.z = t1.Load(r0.xyzw, int3(0, 1, 0)).x;
  r3.w = t1.Load(r0.xyzw, int3(1, 1, 0)).x;
  r0.xyzw = cmp((int4)r2.xyzw == (int4)r3.xyzw);
  r1.zw = cmp(float2(0,0) >= r1.xy);
  r0.yw = (int2)r0.yw | (int2)r1.zz;
  r0.zw = (int2)r0.zw | (int2)r1.ww;
  r0.xy = r0.xy ? r0.zw : 0;
  r0.x = r0.x ? r0.y : 0;
  if (r0.x != 0) discard;
  if (8 == 0) r2.x = 0; else if (8+0 < 32) {   r2.x = (uint)r2.x << (32-(8 + 0)); r2.x = (uint)r2.x >> (32-8);  } else r2.x = (uint)r2.x >> 0;
  if (8 == 0) r2.y = 0; else if (8+8 < 32) {   r2.y = (uint)r2.x << (32-(8 + 8)); r2.y = (uint)r2.y >> (32-8);  } else r2.y = (uint)r2.x >> 8;
  r0.x = t2[r2.x].val[0/4];
  r0.y = t2[r2.x].val[0/4+1];
  r0.z = t2[r2.x].val[0/4+2];
  r0.w = t2[r2.x].val[0/4+3];
  r2.x = t3[r2.y].val[0/4];
  r2.y = t3[r2.y].val[0/4+1];
  r2.z = t3[r2.y].val[0/4+2];
  r2.w = t3[r2.y].val[0/4+3];
  r0.xyzw = r2.xyzw + r0.xyzw;
  o0.xyzw = float4(0.00392156886,0.00392156886,0.00392156886,0.00392156886) * r0.xyzw;
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Thu Nov 16 22:42:45 2023
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xy          1     NONE   float   xy
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[12], immediateIndexed
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_resource_texture2darray (uint,uint,uint,uint) t0
dcl_resource_texture2darray (uint,uint,uint,uint) t1
dcl_resource_structured t2, 16
dcl_resource_structured t3, 16
dcl_temps 4
min r0.xy, v1.xyxx, cb0[6].zwww
frc r1.xy, r0.xyxx
ftoi r0.xy, r0.xyxx
mov r0.zw, cb0[6].xxyx
ld r2.x, r0.xyzw, t0.xxxx
ld_aoffimmi(1,0,0) r2.y, r0.xyzw, t0.xxxx
ld_aoffimmi(0,1,0) r2.z, r0.xyzw, t0.xxxx
ld_aoffimmi(1,1,0) r2.w, r0.xyzw, t0.xxxx
ld r3.x, r0.xyzw, t1.xxxx
ld_aoffimmi(1,0,0) r3.y, r0.xyzw, t1.xxxx
ld_aoffimmi(0,1,0) r3.z, r0.xyzw, t1.xxxx
ld_aoffimmi(1,1,0) r3.w, r0.xyzw, t1.xxxx
ieq r0.xyzw, r2.xyzw, r3.xyzw
ge r1.zw, l(0.000000, 0.000000, 0.000000, 0.000000), r1.xxxy
or r0.yw, r0.xyzw, r1.zzzz
or r0.zw, r0.xyzw, r1.wwww
and r0.xy, r0.xyyy, r0.zwww
and r0.x, r0.xxxx, r0.yyyy
discard_nz r0.x
ubfe r2.xy, l(8, 8, 0, 0), l(0, 8, 0, 0), r2.xxxx
ld_structured r0.xyzw, r2.x, l(0), t2.xyzw
ld_structured r2.xyzw, r2.y, l(0), t3.xyzw
add r0.xyzw, r0.xyzw, r2.xyzw
mul o0.xyzw, r0.xyzw, l(0.003922, 0.003922, 0.003922, 0.003922)
ret
// Approximately 0 instruction slots used

//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
