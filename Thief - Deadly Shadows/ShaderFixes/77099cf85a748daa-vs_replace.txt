// ---- Created with 3Dmigoto v0.6.182 on Mon Jun  9 00:26:17 2025
cbuffer cb0 : register(b0)
{
  float4 cb0[179];
}




// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);


void main(
  float3 v0 : POSITION0,
  float4 v1 : TEXCOORD9,
  uint4 v2 : TEXCOORD10,
  float4 v3 : TEXCOORD8,
  float v4 : TEXCOORD13,
  float4 v5 : COLOR0,
  float4 v6 : COLOR1,
  float4 v7 : TEXCOORD0,
  float4 v8 : TEXCOORD1,
  float4 v9 : TEXCOORD2,
  float4 v10 : TEXCOORD3,
  float4 v11 : TEXCOORD4,
  float4 v12 : TEXCOORD5,
  float4 v13 : TEXCOORD6,
  float4 v14 : TEXCOORD7,
  float3 v15 : TEXCOORD11,
  out float4 o0 : SV_POSITION0,
  out float4 o1 : TEXCOORD8,
  out float4 o2 : COLOR0,
  out float4 o3 : COLOR1,
  out float4 o4 : TEXCOORD9,
  out float4 o5 : TEXCOORD0,
  out float4 o6 : TEXCOORD1,
  out float4 o7 : TEXCOORD2,
  out float4 o8 : TEXCOORD3,
  out float4 o9 : TEXCOORD4,
  out float4 o10 : TEXCOORD5,
  out float4 o11 : TEXCOORD6,
  out float4 o12 : TEXCOORD7)
{
  float4 r0,r1;
  uint4 bitmask, uiDest;
  float4 fDest;

float4 stereo = StereoParams.Load(0);
float separation = stereo.x, convergence = stereo.y, eye = stereo.z;

  r0.xyz = v0.xyz;
  r0.w = 1;
  r1.x = dot(r0.xyzw, cb0[15].xyzw);
  r1.y = dot(r0.xyzw, cb0[16].xyzw);
  r1.z = dot(r0.xyzw, cb0[17].xyzw);
  r1.w = dot(r0.xyzw, cb0[18].xyzw);
  o1.xyzw = r1.xyzw;
  r0.x = dot(r1.xyzw, cb0[23].xyzw);
  r0.y = dot(r1.xyzw, cb0[24].xyzw);
  r0.z = dot(r1.xyzw, cb0[25].xyzw);
  r0.w = dot(r1.xyzw, cb0[26].xyzw);
  o0.x = dot(r0.xyzw, cb0[35].xyzw);
  o0.y = dot(r0.xyzw, cb0[36].xyzw);
  o0.w = dot(r0.xyzw, cb0[38].xyzw);
  o0.z = dot(r0.xyzw, cb0[37].xyzw);
  o4.xyzw = float4(1,0,0,0);
  o2.xyzw = float4(1,1,1,1);
  o3.xyzw = float4(0,0,0,1);
  r0.xy = v7.xy;
  r0.zw = float2(0,1);
  o5.xyzw = r0.xyzw;
  o6.xyzw = r0.xyzw;
  o7.xyzw = r0.xyzw;
  o8.xyzw = r0.xyzw;
  o9.xyzw = r0.xyzw;
  o10.xyzw = r0.xyzw;
  o11.xyzw = r0.xyzw;
  o12.xyzw = r0.xyzw;
  
  o0.x+=separation*1.0;
  
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v0.6.182 on Mon Jun  9 00:26:17 2025
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz
// TEXCOORD                 9   xyzw        1     NONE   float
// TEXCOORD                10   x           2     NONE    uint
// TEXCOORD                 8   xyz         3     NONE   float
// TEXCOORD                13   x           4     NONE   float
// COLOR                    0   xyzw        5     NONE   float
// COLOR                    1   xyzw        6     NONE   float
// TEXCOORD                 0   xyzw        7     NONE   float   xy
// TEXCOORD                 1   xyzw        8     NONE   float
// TEXCOORD                 2   xyzw        9     NONE   float
// TEXCOORD                 3   xyzw       10     NONE   float
// TEXCOORD                 4   xyzw       11     NONE   float
// TEXCOORD                 5   xyzw       12     NONE   float
// TEXCOORD                 6   xyzw       13     NONE   float
// TEXCOORD                 7   xyzw       14     NONE   float
// TEXCOORD                11   xyz        15     NONE   float
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 8   xyzw        1     NONE   float   xyzw
// COLOR                    0   xyzw        2     NONE   float   xyzw
// COLOR                    1   xyzw        3     NONE   float   xyzw
// TEXCOORD                 9   xyzw        4     NONE   float   xyzw
// TEXCOORD                 0   xyzw        5     NONE   float   xyzw
// TEXCOORD                 1   xyzw        6     NONE   float   xyzw
// TEXCOORD                 2   xyzw        7     NONE   float   xyzw
// TEXCOORD                 3   xyzw        8     NONE   float   xyzw
// TEXCOORD                 4   xyzw        9     NONE   float   xyzw
// TEXCOORD                 5   xyzw       10     NONE   float   xyzw
// TEXCOORD                 6   xyzw       11     NONE   float   xyzw
// TEXCOORD                 7   xyzw       12     NONE   float   xyzw
//
vs_4_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[179], immediateIndexed
dcl_input v0.xyz
dcl_input v7.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o4.xyzw
dcl_output o5.xyzw
dcl_output o6.xyzw
dcl_output o7.xyzw
dcl_output o8.xyzw
dcl_output o9.xyzw
dcl_output o10.xyzw
dcl_output o11.xyzw
dcl_output o12.xyzw
dcl_temps 2
mov r0.xyz, v0.xyzz
mov r0.w, l(1.000000)
dp4 r1.x, r0.xyzw, cb0[15].xyzw
dp4 r1.y, r0.xyzw, cb0[16].xyzw
dp4 r1.z, r0.xyzw, cb0[17].xyzw
dp4 r1.w, r0.xyzw, cb0[18].xyzw
mov o1.xyzw, r1.xyzw
dp4 r0.x, r1.xyzw, cb0[23].xyzw
dp4 r0.y, r1.xyzw, cb0[24].xyzw
dp4 r0.z, r1.xyzw, cb0[25].xyzw
dp4 r0.w, r1.xyzw, cb0[26].xyzw
dp4 o0.x, r0.xyzw, cb0[35].xyzw
dp4 o0.y, r0.xyzw, cb0[36].xyzw
dp4 o0.w, r0.xyzw, cb0[38].xyzw
dp4 o0.z, r0.xyzw, cb0[37].xyzw
mov o4.xyzw, l(1.000000,0,0,0)
mov o2.xyzw, l(1.000000,1.000000,1.000000,1.000000)
mov o3.xyzw, l(0,0,0,1.000000)
mov r0.xy, v7.xyyy
mov r0.zw, l(0,0,0,1.000000)
mov o5.xyzw, r0.xyzw
mov o6.xyzw, r0.xyzw
mov o7.xyzw, r0.xyzw
mov o8.xyzw, r0.xyzw
mov o9.xyzw, r0.xyzw
mov o10.xyzw, r0.xyzw
mov o11.xyzw, r0.xyzw
mov o12.xyzw, r0.xyzw
ret
// Approximately 0 instruction slots used

//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
